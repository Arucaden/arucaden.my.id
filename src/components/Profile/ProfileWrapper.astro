---
import TechCard from '../TechCard.svelte';
import MyLinks from './MyLinks.astro';
import { techItems } from '@data/techstack.ts';
import { Image } from 'astro:assets';
import me from '../../../public/Me.webp';

const techToShow = [
  'Astro', 'Unity', 'Svelte', 'Tailwind', 'Python', 'JavaScript', 
  'Flutter', 'Java', 'Blender', 'Figma', 'MySQL', 'Laravel',
  'Photoshop', 'Illustrator', 'UnoCSS', 'C#', 'Clip Studio',
];
const langsToShow = ["English", "Indonesia", "Japan"];

const tech = techItems
  .filter(item => item.type === 'tech' && techToShow.includes(item.name));

const languages = techItems
  .filter(item => item.type === 'language' && langsToShow.includes(item.name));

const highlightedTechSet = new Set(["Unity", "C#", "Clip Studio", "Figma"]);
const highlightedLangsSet = new Set(["English", "Indonesia"]);
---

<div class="flex flex-col md:flex-row justify-start gap-8"> 
  <!-- Main -->
  <div class="flex flex-col w-full md:w-2/3 space-y-4"> 
    
    <section aria-labelledby="desc-heading"> 
      <h2 id="desc-heading" class="section-title">.Description</h2> 
      <p class="text-md sm:text-base flex flex-col">
        I code things. I draw things. Sometimes I blend them into games.  
        Always learning, always curious, anything about interactive or visually cool.  
        Outside of coding, I enjoy anime and gaming, they're part of what sparks my creativity.  
        <span>Let's build something fun and meaningful together!.</span>
      </p>
    </section>

    <!-- Tech stack with show more/less functionality on mobile -->
    <section aria-labelledby="tech-heading">
      <div class="flex justify-between items-center">
        <h2 id="tech-heading" class="section-title">.Techstack</h2>
        <button id="tech-toggle" class="md:hidden text-sm text-main hover:text-white">Show All</button>
      </div>
      
      <div id="tech-container" class="flex flex-row flex-wrap gap-2 md:max-h-full max-h-[120px] overflow-hidden transition-all duration-300">
        {tech.map(t => (
          <TechCard
            name={t.name}
            type={t.type}
            icon={t.icon}
            highlight={highlightedTechSet.has(t.name)}
            showName={true} 
          />
        ))}
      </div>
    </section>

    <section aria-labelledby="lang-heading">
      <h2 id="lang-heading" class="section-title">.Language</h2>
      <div class="flex flex-row flex-wrap gap-2">
        {languages.map(lang => (
          <TechCard
            name={lang.name}
            type={lang.type}
            icon={lang.icon}
            highlight={highlightedLangsSet.has(lang.name)}
            showName={true}
          />
        ))}
      </div>    
    </section>

    <section aria-labelledby="links-heading">
      <h2 id="links-heading" class="section-title">.Link</h2>
      <MyLinks />
    </section>
    
    <!-- Mobile-only: Show portrait button -->
    <button 
      id="show-portrait" 
      class="md:hidden bg-main/20 text-main hover:bg-main hover:text-black-text transition-colors py-2 px-4 rounded-lg text-center mt-4"
    >
      Show Portrait
    </button>
  </div>

  <!-- Portrait - hidden on mobile, visible on desktop -->
  <aside class="hidden md:flex flex-col w-full md:w-80 mt-6 md:mt-0"> 
    <h2 class="section-title">.Portrait</h2> 
    <div class="relative w-full aspect-[3/4] overflow-hidden rounded-lg">
      <Image 
        src={me}
        alt="Portrait of Daffa Maulana Satria"
        widths={[400, 800]}
        sizes="(max-width: 768px) 100vw, 50vw"
        class="image-border2 w-full h-full object-cover object-top absolute top-0 left-0"
      />
    </div>
  </aside>
</div>

<!-- Full-screen portrait overlay (hidden by default) -->
<div id="portrait-overlay" class="fixed inset-0 bg-black/90 z-50 hidden flex-col items-center justify-center p-4">
  <div class="relative w-full max-w-md max-h-[80vh] overflow-hidden">
    <Image 
      src={me}
      alt="Portrait of Daffa Maulana Satria"
      widths={[400, 800]}
      sizes="100vw"
      class="w-full h-auto rounded-lg"
    />
    <button 
      id="close-portrait" 
      class="absolute top-4 right-4 bg-main/80 text-black-text hover:bg-main p-2 rounded-full"
    >
      <span class="i-heroicons-x-mark w-6 h-6"></span>
    </button>
  </div>
</div>

<script>
  // Tech stack expand/collapse functionality
  document.addEventListener('DOMContentLoaded', () => {
    const techToggle = document.getElementById('tech-toggle');
    const techContainer = document.getElementById('tech-container');
    
    if (techToggle && techContainer) {
      let expanded = false;

      techToggle.addEventListener('click', () => {
        expanded = !expanded;
        
        if (expanded) {
          techContainer.style.maxHeight = techContainer.scrollHeight + 'px';
          techToggle.textContent = 'Show Less';
        } else {
          techContainer.style.maxHeight = '120px';
          techToggle.textContent = 'Show All';
        }
      });
    }
    
    // Portrait overlay functionality
    const showPortrait = document.getElementById('show-portrait');
    const closePortrait = document.getElementById('close-portrait');
    const portraitOverlay = document.getElementById('portrait-overlay');
    
    if (showPortrait && closePortrait && portraitOverlay) {
      showPortrait.addEventListener('click', () => {
        portraitOverlay.classList.remove('hidden');
        portraitOverlay.classList.add('flex');
        document.body.classList.add('overflow-hidden'); // Prevent body scrolling
      });
      
      closePortrait.addEventListener('click', () => {
        portraitOverlay.classList.add('hidden');
        portraitOverlay.classList.remove('flex');
        document.body.classList.remove('overflow-hidden');
      });
    }
  });
</script>

<style>
  /* Gradient fade for collapsed tech stack */
  #tech-container:not(.expanded) {
    mask-image: linear-gradient(to bottom, rgba(0,0,0,1) 70%, rgba(0,0,0,0));
    -webkit-mask-image: linear-gradient(to bottom, rgba(0,0,0,1) 70%, rgba(0,0,0,0));
  }

  @media (min-width: 768px) {
    #tech-container {
      mask-image: none !important;
      -webkit-mask-image: none !important;
    }
  }
</style>