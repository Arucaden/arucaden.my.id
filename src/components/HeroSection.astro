---
const { name = "DAFFA MAULANA SATRIA" } = Astro.props;
const titles = ["Game Developer", "Illustrator", "Fullstack Developer"];
---

<section 
  class="relative h-screen w-full flex flex-col justify-center items-center text-center animate-fade-in animate-duration-1000"
  style="background-image: url('/artworks/Mikazuki.png'); background-size: cover; background-position: center;"
>
  <div class="absolute inset-0 bg-black/60 backdrop-blur-sm z-0" />

  <div class="z-10 px-4 flex flex-col items-center">
    <h1 class="text-3xl md:text-5xl font-bold tracking-wider mb-3">{name}</h1>
    
    <div class="h-8 md:h-10 overflow-hidden">
      <div id="title-text" class="text-md md:text-xl relative text-main font-bold"></div>
    </div>
  </div>

  <div class="absolute bottom-8 z-10">
    <a href="#profile" class="opacity-80 hover:opacity-100 animate-bounce">
      <div class="i-heroicons-chevron-down w-6 h-6" />
    </a>
  </div>
</section>

<style>
  @keyframes glitch {
    0% {
      transform: translate(0);
      opacity: 1;
    }
    20% {
      transform: translate(-5px, 5px);
      opacity: 0.9;
    }
    40% {
      transform: translate(-5px, -5px);
      opacity: 1;
    }
    60% {
      transform: translate(5px, 5px);
      opacity: 0.9;
    }
    80% {
      transform: translate(5px, -5px);
      opacity: 1;
    }
    100% {
      transform: translate(0);
      opacity: 1;
    }
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  .glitch-text {
    animation: glitch 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .fade-in {
    animation: fadeIn 0.8s ease-out;
  }
</style>

<script>
  const titles = ["Game Developer", "Illustrator", "Fullstack Developer"];
  const titleElement = document.getElementById('title-text');
  let currentIndex = 0;

  // Function to create a typed text effect with glitch
  function updateText(text, element) {
    // Force a reflow to reset animations by removing both classes
    element.classList.remove("glitch-text", "fade-in");
    
    // This technique forces the browser to acknowledge the class removal
    void element.offsetWidth;
    
    // Update the text content
    element.textContent = text;
    
    // Add both animations back
    element.classList.add("glitch-text", "fade-in");
  }

  // Initial text
  if (titleElement) {
    updateText(titles[0], titleElement);
  }

  // Rotate through titles
  setInterval(() => {
    if (titleElement) {
      currentIndex = (currentIndex + 1) % titles.length;
      updateText(titles[currentIndex], titleElement);
    }
  }, 3000); // Change every 3 seconds
</script>